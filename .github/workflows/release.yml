name: Build and Release Binaries

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }} binary
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            artifact_name: gitscribe
            asset_name: gitscribe-macos
          - os: ubuntu-latest
            artifact_name: gitscribe
            asset_name: gitscribe-linux
          - os: windows-latest
            artifact_name: gitscribe.exe
            asset_name: gitscribe-windows.exe

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Build binary with PyInstaller
        run: pyinstaller --onefile --name gitscribe src/cli.py

      - name: Rename binary for release
        shell: bash
        run: |
          mkdir -p release
          if [ "${{ runner.os }}" == "Windows" ]; then
            mv dist/gitscribe.exe release/${{ matrix.asset_name }}
          else
            mv dist/gitscribe release/${{ matrix.asset_name }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: release/${{ matrix.asset_name }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/gitscribe-macos/gitscribe-macos
            artifacts/gitscribe-linux/gitscribe-linux
            artifacts/gitscribe-windows.exe/gitscribe-windows.exe
          draft: false
          prerelease: false
          body_path: documentation/CHANGELOG.md
